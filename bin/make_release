#!/bin/bash

read -r -d '' HELPTEXT<<'ENDHELP'
    make_release

    Build a project and place a ready-to-go release in the 'release' directory.

    Usage:
        make_release [--help|-h] PROJECT

    PROJECT is the name of a project directory (in the 'projects' directory).

    Options:
        --help, -h      Print this help and exit
ENDHELP

# Reset IFS (newline, space, tab)
IFS='
 	'

set -eu

if [ $# -lt 1 ] ; then
    echo "ERROR: Must provide project directory:" >&2
    echo "Example:" >&2
    echo "" >&2
    echo "    make_release <project>" >&2
    echo "" >&2
    exit 1
fi

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo "$HELPTEXT";
    exit
fi

if ! [ -d "projects" ] ; then
    echo "ERROR: Could not find projects directory. Are you running this from the repository root?" >&2
    exit 1
fi

PROJECT="${1%/}"
SRC="projects/$PROJECT"
DEST="release/server/static/$PROJECT"

if ! [ -d "$SRC" ] || [ -z "$PROJECT" ] ; then
    echo "ERROR: Could not find project '$PROJECT'" >&2
    echo "Available projects are:" >&2
    for DIR in projects/* ; do
        [ -d "$DIR" ] && echo "    $(basename "$DIR")" >&2
    done
    exit 1
fi

echo ""
echo "Making a release for project '$PROJECT'"

# Check for a process-data script and run it if its there
if [ -x "$SRC/process-data" ] ; then
    echo "Pre-processing project data ..."
    ( cd "$SRC" && ./process-data )
fi

# initialize the database
echo ""
echo "Initializing database ..."
./bin/db_pop "$SRC"

echo ""
echo "Cleaning release ..."
# clean up
rm -rf "$DEST"

echo ""
echo "Creating new release ..."
# new install
mkdir -p "$DEST/gtk/js" 

echo ""
echo "Building Javascript library ..."
(cd client-js && npx webpack)
cp  client-js/gtk-dist/gtk.min.js "$DEST/gtk/js/gtk.min.js"

echo ""
echo "Copying files ..."

# Server and served content
cp server/static/*.html "$DEST"
sed -i.bak "s/GTK_PROJECT_NAME/$PROJECT/" "$DEST/index.html"
find $DEST -type f -iname '*.html' -exec sed -i.bak "s/GTK_PROJECT_ID/$PROJECT/g" "{}" +;
sed -i.bak "s/GTK_PROJECT_ID/$PROJECT/g" "$DEST/gtk/js/gtk.min.js"
cp -a "$SRC" "$DEST/project"

echo ""
echo "Checking shared flask server and static gtk/img in release folder ..."

cp server/license.md release/
if [ ! -f release/server/gtkserver.py ]; then
    cp server/gtkserver.py release/server/gtkserver.py
fi

if [ ! -f release/server/requirements.txt ]; then
    cp server/requirements.txt release/server/requirements.txt
fi

if [ ! -d release/server/static/gtk ]; then
    cp -a server/static/gtk release/server/static
fi

if [ ! -d release/server/static/img ]; then
    cp -a server/static/img release/server/static
fi

echo ""
echo "Done!"
